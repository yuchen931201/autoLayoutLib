apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0-alpha1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


//////// 打包发布配置开始 ////////
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
//    GITHUB_REPO_PATH = "E:\\WorkCode\\myCodingNet\\AutoLayoutUp\\AutoLayout\\repository"
    GITHUB_REPO_PATH = uri('../repository')
    PUBLISH_GROUP_ID = 'com.tzlib.autolayout'
    PUBLISH_ARTIFACT_ID = 'AutoLayoutLib'
    PUBLISH_VERSION = '1.0.0'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}

////打包main目录下代码和资源的 task
//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
////配置需要上传到maven仓库的文件
//artifacts {
//    archives androidSourcesJar
//}
////上传到Maven仓库的task
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            //指定maven仓库url
//            repository(url: "http://localhost:8081/nexus/content/repositories/releases/") {
//                //nexus登录默认用户名和密码
//                authentication(userName: "admin", password: "admin123")
//            }
//            pom.groupId = "com.tzlib.autolayout"// 唯一标识（通常为模块包名，也可以任意）
//            pom.artifactId = "AutoLayoutLib" // 项目名称（通常为类库模块名称，也可以任意）
//            pom.version = "1.0.0" // 版本号
//        }
//    }
//}

//发布到本地
//uploadArchives{
//    repositories.mavenDeployer{
//        // 配置本地仓库路径，项目根目录下的repository目录中
//        repository(url: uri('../repository'))
//        pom.groupId = "com.tzlib.autolayout"// 唯一标识（通常为模块包名，也可以任意）
//        pom.artifactId = "AutoLayoutLib" // 项目名称（通常为类库模块名称，也可以任意）
//        pom.version = "1.0.0" // 版本号
//    }
//}
